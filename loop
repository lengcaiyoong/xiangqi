#loop

##Key in Data
loop_data =c('
	p2-30
	P2-30
	m2+2-10
	M2+2-10
	c2+1
	C2-10
	c2-50
	C2+6
')

loop_data <- strsplit(loop_data,'\n')[[1]][-1]


##Run Loop
for(item in loop_data){
	mv(item,forloop=T)
}


##View moving seq
plotseq <- function(){
for (i in 1:length(L)){
	x = readline(prompt = "next? y/n ")
	if(x == 'n') break
	plotq(L[[i]])
}}



#################

#move chess
 mv <- function(x,forloop=F){
	#declare variable x,i
	   if (forloop==T) {x <- parse(text=x)}else{
		x <- as.expression(substitute(x))	#insert parameter w/o quotes
			}
		i <- strsplit(toString(x),' ' )[[1]][1]	#eg. c12
			i1 <- substr(toString(x),1,1)	#eg. c
			if(nchar(i)<2){i2 <- 1}else{i2 <- as.integer(substr(i,2,nchar(i)))}  #eg. 12, default=1
print(x)
print(i)
print(i1)
print(i2)

	#inverse matrix if lwcse
		if( sum(grepl(i1,letters))>0 ) q <<- q[10:1,]
	#get o,n
	     if( grepl('[A-Za-z]',i))(
		o <- grep(i1,q)[i2]
			)else{
		o <- as.integer( strsplit(toString(x),' ' )[[1]][1] )
		  }
		n <- o + eval(parse(text=paste( strsplit(toString(x),' ' )[[1]][-1],collapse='' )))
print(o)
print(n)
 	#modify chess
	    q[n] <<- q[o]
	    q[o] <<- '.'
	#inverse matrix if lwcse
		if( sum(grepl(i1,letters))>0 ) q <<- q[10:1,]
	#save, output
	    L <<- append(L,list(q))
	    if(forloop==F) p(q)
}




##print fx

print fx
  p <- function(q=L[[length(L)]],i=NA,c=F,ch='',seq=''){
	#c: clean board
	#i: position of chess
	#ch: chinese character (1:red/2:black)
	    if(c==T) rownames(q) <- rep('',10)
	     i <- as.character(substitute(i))
 	    if(i %in% unique(c(q))) q[q==i] <- grep(i,q)
#	    if(i %in% unique(c(q))) (q[grep(i,q)] <- paste(q[grep(i,q)],1:length(grep(i,q)),sep=''))
	    if(ch==1) for (i in 1:7 ){q[grep(qizi[,1][i],q)] <- qizi[,2][i]}
	    if(ch==2) for (i in 1:7 ){q[grep(qizi[,3][i],q)] <- qizi[,4][i]}
	 print(q,quote=F)
#        cat('\n',' ',sprintf('%s',9:1),'\n')	#spacing
	if (seq == T){
			 	L2 = list()
				 for (i in (length(L)):2 ){
					po <- grep(2,(L[[i]] != L[[i-1]]) + (L[[i]] != '.')) #position
					q <- L[[i]]
					q[po] <- paste('*',q[po],sep='')
					L2 <- append(L2, list(q))}
			L2 <- append(L2, L[1])
			print(L2,quote=F)}}
