loop_data =c('
	p2-30
	P2-30
	m2+2-10
	M2+2-10
	c2+1
	C2-10
	c2-50
	C2+6
')

loop_data <- strsplit(loop_data,'\n')[[1]][-1]

p(q)

for(item in loop_data){
	mv(item,forloop=T)
}

p(q)



#################

#move chess
 mv <- function(x,forloop=F){
	#declare variable x,i
	   if (forloop==T) {x <- parse(text=x)}else{
		x <- as.expression(substitute(x))	#insert parameter w/o quotes
			}
		i <- strsplit(toString(x),' ' )[[1]][1]	#eg. c12
			i1 <- substr(toString(x),1,1)	#eg. c
			if(nchar(i)<2){i2 <- 1}else{i2 <- as.integer(substr(i,2,nchar(i)))}  #eg. 12, default=1
print(x)
print(i)
print(i1)
print(i2)

	#inverse matrix if lwcse
		if( sum(grepl(i1,letters))>0 ) q <<- q[10:1,]
	#get o,n
	     if( grepl('[A-Za-z]',i))(
		o <- grep(i1,q)[i2]
			)else{
		o <- as.integer( strsplit(toString(x),' ' )[[1]][1] )
		  }
		n <- o + eval(parse(text=paste( strsplit(toString(x),' ' )[[1]][-1],collapse='' )))
print(o)
print(n)
 	#modify chess
	    q[n] <<- q[o]
	    q[o] <<- '.'
	#inverse matrix if lwcse
		if( sum(grepl(i1,letters))>0 ) q <<- q[10:1,]
	#save, output
	    L <<- append(L,list(q))
	    if(forloop==F) p(q)
}
